from django.core.management.base import BaseCommand
from django.apps import apps

DATA = [
    {"model": "cake.CakeLayer", "pk": 1, "fields": {"amount": 1, "price": 400}},
    {"model": "cake.CakeLayer", "pk": 2, "fields": {"amount": 2, "price": 750}},
    {"model": "cake.CakeLayer", "pk": 3, "fields": {"amount": 3, "price": 1100}},
    {"model": "cake.CakeShape", "pk": 1, "fields": {"name": "–ö–≤–∞–¥—Ä–∞—Ç", "price": 600}},
    {"model": "cake.CakeShape", "pk": 2, "fields": {"name": "–ö—Ä—É–≥", "price": 400}},
    {"model": "cake.CakeShape", "pk": 3, "fields": {"name": "–ü—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫", "price": 1000}},
    {"model": "cake.Topping", "pk": 1, "fields": {"name": "–ë–µ–∑", "price": 0}},
    {"model": "cake.Topping", "pk": 2, "fields": {"name": "–ë–µ–ª—ã–π —Å–æ—É—Å", "price": 200}},
    {"model": "cake.Topping", "pk": 3, "fields": {"name": "–ö–∞—Ä–∞–º–µ–ª—å–Ω—ã–π —Å–∏—Ä–æ–ø", "price": 180}},
    {"model": "cake.Topping", "pk": 4, "fields": {"name": "–ö–ª–µ–Ω–æ–≤—ã–π —Å–∏—Ä–æ–ø", "price": 200}},
    {"model": "cake.Topping", "pk": 5, "fields": {"name": "–ö–ª—É–±–Ω–∏—á–Ω—ã–π —Å–∏—Ä–æ–ø", "price": 300}},
    {"model": "cake.Topping", "pk": 6, "fields": {"name": "–ß–µ—Ä–Ω–∏—á–Ω—ã–π —Å–∏—Ä–æ–ø", "price": 350}},
    {"model": "cake.Topping", "pk": 7, "fields": {"name": "–ú–æ–ª–æ—á–Ω—ã–π —à–æ–∫–æ–ª–∞–¥", "price": 200}},
    {"model": "cake.Berry", "pk": 1, "fields": {"name": "–ú–∞–ª–∏–Ω–∞", "price": 300}},
    {"model": "cake.Berry", "pk": 2, "fields": {"name": "–ö–ª—É–±–Ω–∏–∫–∞", "price": 500}},
    {"model": "cake.Berry", "pk": 3, "fields": {"name": "–ï–∂–µ–≤–∏–∫–∞", "price": 400}},
    {"model": "cake.Berry", "pk": 4, "fields": {"name": "–ì–æ–ª—É–±–∏–∫–∞", "price": 450}},
    {"model": "cake.Decor", "pk": 1, "fields": {"name": "–§–∏—Å—Ç–∞—à–∫–∏", "price": 300}},
    {"model": "cake.Decor", "pk": 2, "fields": {"name": "–ë–µ–∑–µ", "price": 400}},
    {"model": "cake.Decor", "pk": 3, "fields": {"name": "–§—É–Ω–¥—É–∫", "price": 350}},
    {"model": "cake.Decor", "pk": 4, "fields": {"name": "–ü–µ–∫–∞–Ω", "price": 300}},
    {"model": "cake.Decor", "pk": 5, "fields": {"name": "–ú–∞—Ä—à–º–µ–ª–ª–æ—É", "price": 200}},
    {"model": "cake.Decor", "pk": 6, "fields": {"name": "–ú–∞—Ä—Ü–∏–ø–∞–Ω", "price": 280}},
]

class Command(BaseCommand):
    help = "–ó–∞–ø–æ–ª–Ω—è–µ—Ç –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ –¥–ª—è —Ç–æ—Ä—Ç–æ–≤."

    def handle(self, *args, **kwargs):
        for entry in DATA:
            app_label, model_name = entry["model"].split(".")
            model = apps.get_model(app_label, model_name)
            
            obj, created = model.objects.update_or_create(
                pk=entry["pk"], defaults=entry["fields"]
            )

            if created:
                self.stdout.write(self.style.SUCCESS(f"–î–æ–±–∞–≤–ª–µ–Ω: {obj}"))
            else:
                self.stdout.write(self.style.WARNING(f"–û–±–Ω–æ–≤–ª–µ–Ω: {obj}"))

        self.stdout.write(self.style.SUCCESS("–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–æ–ª–Ω–µ–Ω–∞ —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏! üéÇ"))
